version: "3.7"
name: rp-go-cqrs-todo
networks:
    _network:
        driver: bridge
volumes:
    redpanda-0: null
    postgresdb: null
    mongodb-data-cni: null
    mongodb-data-containers: null 
services:
    db:
        image: postgres:16.2-alpine3.19
        restart: always
        env_file:
            - .env
        # set shared memory limit when using docker-compose
        shm_size: 128mb
        ports:
            - ${PGPORT}:5432
        environment:
            POSTGRES_DB: ${PGDATABASE}
            PGDATA: /var/lib/postgresql/data/pgdata
            POSTGRES_USER:  ${PGUSER}
            POSTGRES_PASSWORD: ${PGPASSWORD}
        volumes:
            - postgresdb:/var/lib/postgresql/data/pgdata
        networks:
            - _network
    mongo:
        build:
            dockerfile_inline: |
                FROM mongodb/atlas
                COPY ./bin/mongo_entrypoint.sh /entrypoint.sh
        # image: mongodb/atlas
        privileged: true
        # set shared memory limit when using docker-compose
        shm_size: 128mb
        env_file:
            - .env
        command: /entrypoint.sh
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - mongodb-data-cni:/etc/cni
            - mongodb-data-containers:/var/lib/containers
        ports:
            - ${ATLAS_PORT}:${ATLAS_PORT}
        networks:
            - _network
    redpanda-0:
        command:
        - redpanda
        - start
        build:
            dockerfile_inline: |
                FROM docker.redpanda.com/redpandadata/redpanda:v23.3.6
                COPY --chown=redpanda:redpanda etc/redpanda/redpanda.yaml /etc/redpanda/redpanda.yaml
        #image: docker.redpanda.com/redpandadata/redpanda:v23.3.6
        container_name: redpanda-0
        volumes:
            - redpanda-0:/var/lib/redpanda/data
        networks:
            - _network
        ports:
            - 19092:19092
            - 19644:9644
            - 18082:18082
    # Consoles and GUI
    adminer:
        image: adminer
        restart: always
        depends_on:
            - db
        ports:
            - 9090:8080
        networks:
            - _network
    console:
        container_name: redpanda-console
        image: docker.redpanda.com/redpandadata/console:v2.4.5
        entrypoint: /bin/sh
        command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
        environment:
            CONFIG_FILEPATH: /tmp/config.yml
            CONSOLE_CONFIG_FILE: |
                kafka:
                  brokers: ["redpanda-0:9092"]
                redpanda:
                  adminApi:
                    enabled: true
                    urls: ["http://redpanda-0:9644"]
        ports:
            - 8080:8080
        networks:
            - _network
        depends_on:
            - redpanda-0
